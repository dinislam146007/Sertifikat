from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def start_inline(admin=False):
    kb =[
        [InlineKeyboardButton(text='üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='search')],
        [InlineKeyboardButton(text='üìë –í—Å–µ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏', callback_data='services')],
        [InlineKeyboardButton(text='‚ÅâÔ∏è –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º', url='https://t.me/Nastia_NZ')],
        [InlineKeyboardButton(text='‚ö†Ô∏è –í–∞–∂–Ω–∞—è –∏ –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='inf')],
        [InlineKeyboardButton(text='üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã', url='https://t.me/Nastia_NZ')]
    ]
    if admin:
        kb.append(
            [InlineKeyboardButton(text='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='admin')]
        )
    return InlineKeyboardMarkup(inline_keyboard=kb)

def services_inline():
    kb = [
        [InlineKeyboardButton(text='üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é', callback_data='search')],
        [InlineKeyboardButton(text='–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¢–†–¢–°', callback_data='cert 0 0'),
        InlineKeyboardButton(text='–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –¢–†–¢–°', callback_data='cert 1')],
        [InlineKeyboardButton(text='–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ì–û–°–¢—Ä', callback_data='cert 2'),
        InlineKeyboardButton(text='–°–ì–†', callback_data='cert 3')],
        [InlineKeyboardButton(text='–°–≤—è–∑—å —Å –º–µ–Ω–µ–∂–µ—Ä–æ–º', url='https://t.me/Nastia_NZ')],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='close_state')]
    ]
    # if admin:
    #     kb.append(
    #         [InlineKeyboardButton(text='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É', callback_data='admin')]
    #     )
    return InlineKeyboardMarkup(inline_keyboard=kb)

def close_state_inline():
    kb = [
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="close_state")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


def cert_inline(type_cert, trts_type):
    kb = [
    ]
    if (type_cert == 0) and (trts_type is None):
        kb.append([InlineKeyboardButton(text='–¢–†–¢–° 004', callback_data='cert 0 004')])
        kb.append([InlineKeyboardButton(text='–¢–†–¢–° 010', callback_data='cert 0 010')])
        kb.append([InlineKeyboardButton(text='–¢–†–¢–° 018', callback_data='cert 0 018')])
        kb.append([InlineKeyboardButton(text='–¢–†–¢–° 020', callback_data='cert 0 020')])
    else:

        kb.append(
            [InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'request {type_cert} {trts_type}')], 
        )
    kb.append(
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="close_state")]
    )
    return InlineKeyboardMarkup(inline_keyboard=kb)

def trts_inline():
    kb = [
        [InlineKeyboardButton(text='–¢–†–¢–° 004', callback_data='cert trts')],
        [InlineKeyboardButton(text='–¢–†–¢–° 010', callback_data='cert trts')],
        [InlineKeyboardButton(text='–¢–†–¢–° 018', callback_data='cert trts')],
        [InlineKeyboardButton(text='–¢–†–¢–° 020', callback_data='cert trts')],
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)

def admin_unine():
    kb = [
        [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—ã –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é', callback_data='change_price start')],
        [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', callback_data='edit_mes start')],
        [InlineKeyboardButton(text='–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='newsletter')],
        [InlineKeyboardButton(text='–ó–∞—è–≤–∫–∏', callback_data='sh_requests 0')],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='close_state')],
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


def edit_mes_inline():
    kb = [
        [InlineKeyboardButton(text='–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', callback_data='edit_mes start_m')],
        [InlineKeyboardButton(text='–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ª—É–≥', callback_data='edit_mes services')],
        [InlineKeyboardButton(text='–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', callback_data='edit_mes inf')],
        [InlineKeyboardButton(text='–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞', callback_data='edit_mes search')],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


def change_price_inline():
    kb = [
        [InlineKeyboardButton(text='–¢–†–¢–° 004', callback_data='change_price 0 004'),
         InlineKeyboardButton(text='–¢–†–¢–° 010', callback_data='change_price 0 010'),
         InlineKeyboardButton(text='–¢–†–¢–° 018', callback_data='change_price 0 018'),
         InlineKeyboardButton(text='–¢–†–¢–° 020', callback_data='change_price 0 020')
         ],
         [InlineKeyboardButton(text='–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –¢–†–¢–°', callback_data='change_price 1')],
         [InlineKeyboardButton(text='–ì–û–°–¢—Ä', callback_data='change_price 2')],
         [InlineKeyboardButton(text='–°–ì–†', callback_data='change_price 3')],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)

def request_choice():
    kb = [
        [
            InlineKeyboardButton(text='–°–∫–∞—á–∞—Ç—å –±–ª–∞–Ω–∫', callback_data='choice_request blank'),
         InlineKeyboardButton(text='–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–µ–π—á–∞—Å', callback_data='choice_request now')
         ],
         [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='close_state')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)

def search_answer_inline():
    kb = [
        [InlineKeyboardButton(text='–£—Ç–æ—á–Ω–∏—Ç—å —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞', url='https://t.me/Nastia_NZ')],
        [InlineKeyboardButton(text='–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–≤–µ—Å—Ç–∏ –µ—â—ë —Ä–∞–∑', callback_data='search')],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='close_state')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)

def requests_inline(n):
    kb = [
        [InlineKeyboardButton(text='<-', callback_data=f'requests {n - 1}'),
         InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin'),
         InlineKeyboardButton(text='->', callback_data=f'requests {n + 1}')
         ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)